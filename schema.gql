input AccountInput {
  email: String
  firstName: String
  lastName: String
  token: String
}

type Container {
  createdAt: DateTime!
  id: ID!
  origin: String!
}

scalar DateTime

input DisableTOTPInput {
  password: String!
}

input EnableTOTPInput {
  secret: String!
  token: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  disableOtp(input: DisableTOTPInput): User!
  edit(input: AccountInput): User!
  enableOtp(input: EnableTOTPInput): User!
  login(input: LoginInput): User!
  signup(input: SignupInput): User!
}

type Query {
  container: Container
  logout: User!
  me: User
  resolveOtp: User!
}

input SignupInput {
  email: String!
  name: String
  password: String!
  refer: String
}

type User {
  avatar: String
  createdAt: DateTime!
  firstName: String
  id: ID!
  lastName: String
  otpOnboard: String
  otpSecret: String
  updatedAt: DateTime!
}
